<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.second.mapper.RecordBookMapper" >
  <resultMap id="BaseResultMap" type="com.fish.dao.second.model.RecordBook" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="book" property="book" jdbcType="INTEGER" />
    <result column="bookName" property="bookname" jdbcType="VARCHAR" />
    <result column="basinId" property="basinid" jdbcType="INTEGER" />
    <result column="basinName" property="basinname" jdbcType="VARCHAR" />
    <result column="lighten" property="lighten" jdbcType="INTEGER" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, book, bookName, basinId, basinName, lighten, updateTime
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, a.userId,b.nickName, book, bookName, basinId, basinName, lighten, updateTime
    from record_book a left join user_info b on a.userId = b.userId
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from record_book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from record_book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fish.dao.second.model.RecordBook" >
    insert into record_book (id, userId, book, 
      bookName, basinId, basinName, 
      lighten, updateTime)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{book,jdbcType=INTEGER}, 
      #{bookname,jdbcType=VARCHAR}, #{basinid,jdbcType=INTEGER}, #{basinname,jdbcType=VARCHAR}, 
      #{lighten,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fish.dao.second.model.RecordBook" >
    insert into record_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="book != null" >
        book,
      </if>
      <if test="bookname != null" >
        bookName,
      </if>
      <if test="basinid != null" >
        basinId,
      </if>
      <if test="basinname != null" >
        basinName,
      </if>
      <if test="lighten != null" >
        lighten,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="book != null" >
        #{book,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="basinid != null" >
        #{basinid,jdbcType=INTEGER},
      </if>
      <if test="basinname != null" >
        #{basinname,jdbcType=VARCHAR},
      </if>
      <if test="lighten != null" >
        #{lighten,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.dao.second.model.RecordBook" >
    update record_book
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="book != null" >
        book = #{book,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="basinid != null" >
        basinId = #{basinid,jdbcType=INTEGER},
      </if>
      <if test="basinname != null" >
        basinName = #{basinname,jdbcType=VARCHAR},
      </if>
      <if test="lighten != null" >
        lighten = #{lighten,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fish.dao.second.model.RecordBook" >
    update record_book
    set userId = #{userid,jdbcType=BIGINT},
      book = #{book,jdbcType=INTEGER},
      bookName = #{bookname,jdbcType=VARCHAR},
      basinId = #{basinid,jdbcType=INTEGER},
      basinName = #{basinname,jdbcType=VARCHAR},
      lighten = #{lighten,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>