<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.second.mapper.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.fish.dao.second.model.Orders">
        <id column="ddId" property="ddid" jdbcType="VARCHAR"/>
        <result column="ddUid" property="dduid" jdbcType="VARCHAR"/>
        <result column="ddGId" property="ddgid" jdbcType="INTEGER"/>
        <result column="ddType" property="ddtype" jdbcType="VARCHAR"/>
        <result column="ddAccount" property="ddaccount" jdbcType="VARCHAR"/>
        <result column="ddOrder" property="ddorder" jdbcType="VARCHAR"/>
        <result column="ddError" property="dderror" jdbcType="VARCHAR"/>
        <result column="ddPrice" property="ddprice" jdbcType="DECIMAL"/>
        <result column="ddState" property="ddstate" jdbcType="INTEGER"/>
        <result column="ddTime" property="ddtime" jdbcType="TIMESTAMP"/>
        <result column="ddTrans" property="ddtrans" jdbcType="TIMESTAMP"/>
        <result column="ddOId" property="ddoid" jdbcType="VARCHAR"/>
        <result column="ddAppId" property="ddappid" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    ddId, ddUid, ddGId, ddType, ddAccount, ddOrder, ddError, ddPrice, ddState, ddTime, 
    ddTrans, ddOId, ddAppId
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from orders
        where ddId = #{ddid,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders order by ddTime desc
    </select>

    <select id="selectByTimes" resultType="com.fish.dao.second.model.Orders" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from orders where DATE(ddTime) between '${start}' and '${end}' order by ddTime desc
    </select>

    <!--查询付费统计-->
    <select id="queryBuyStatis" resultMap="BaseResultMap">
        SELECT
        DATE(o.ddTrans) AS ddTrans, SUM(o.ddPrice) AS ddPrice, COUNT(DISTINCT o.ddUid) AS payUsers,o.ddAppId AS ddAppId
        FROM orders o, persie.wx_config w
        <where>
            DATE(o.ddTrans) BETWEEN #{start} AND #{end} AND ddOrder !='null'
            AND o.ddAppId = w.ddAppId
            <if test="ddappid != null and ddappid !=''">
                AND o.ddAppId = #{ddappid}
            </if>
            <if test="payState != null and payState !=''">
                AND w.program_type = #{payState}
            </if>
        </where>
        GROUP BY DATE(o.ddTrans) ,o.ddAppId
        ORDER BY DATE(o.ddTrans) ASC
    </select>
    <select id="queryProgramReCharge" resultType="com.fish.dao.second.model.Orders">
     SELECT  DATE(ddTrans) as ddtrans ,ddAppId,SUM(ddPrice) as ddPrice  FROM orders WHERE ddState = 1 GROUP BY DATE(ddTrans) ,ddAppId
    </select>
    <select id="queryProgramReChargeCount" resultType="com.fish.dao.second.model.Orders">
        SELECT  DATE(ddTrans) as ddtrans ,SUM(ddPrice) as ddPrice  FROM orders WHERE ddState = 1 GROUP BY DATE(ddTrans)
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.fish.dao.second.model.Orders">
        update orders
        <set>
            <if test="dduid != null">
                ddUid = #{dduid,jdbcType=VARCHAR},
            </if>
            <if test="ddgid != null">
                ddGId = #{ddgid,jdbcType=INTEGER},
            </if>
            <if test="ddtype != null">
                ddType = #{ddtype,jdbcType=VARCHAR},
            </if>
            <if test="ddaccount != null">
                ddAccount = #{ddaccount,jdbcType=VARCHAR},
            </if>
            <if test="ddorder != null">
                ddOrder = #{ddorder,jdbcType=VARCHAR},
            </if>
            <if test="dderror != null">
                ddError = #{dderror,jdbcType=VARCHAR},
            </if>
            <if test="ddprice != null">
                ddPrice = #{ddprice,jdbcType=DECIMAL},
            </if>
            <if test="ddstate != null">
                ddState = #{ddstate,jdbcType=INTEGER},
            </if>
            <if test="ddtime != null">
                ddTime = #{ddtime,jdbcType=TIMESTAMP},
            </if>
            <if test="ddtrans != null">
                ddTrans = #{ddtrans,jdbcType=TIMESTAMP},
            </if>
            <if test="ddoid != null">
                ddOId = #{ddoid,jdbcType=VARCHAR},
            </if>
            <if test="ddappid != null">
                ddAppId = #{ddappid,jdbcType=VARCHAR},
            </if>
        </set>
        where ddId = #{ddid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fish.dao.second.model.Orders">
    update orders
    set ddUid = #{dduid,jdbcType=VARCHAR},
      ddGId = #{ddgid,jdbcType=INTEGER},
      ddType = #{ddtype,jdbcType=VARCHAR},
      ddAccount = #{ddaccount,jdbcType=VARCHAR},
      ddOrder = #{ddorder,jdbcType=VARCHAR},
      ddError = #{dderror,jdbcType=VARCHAR},
      ddPrice = #{ddprice,jdbcType=DECIMAL},
      ddState = #{ddstate,jdbcType=INTEGER},
      ddTime = #{ddtime,jdbcType=TIMESTAMP},
      ddTrans = #{ddtrans,jdbcType=TIMESTAMP},
      ddOId = #{ddoid,jdbcType=VARCHAR},
      ddAppId = #{ddappid,jdbcType=VARCHAR}
    where ddId = #{ddid,jdbcType=VARCHAR}
  </update>
</mapper>