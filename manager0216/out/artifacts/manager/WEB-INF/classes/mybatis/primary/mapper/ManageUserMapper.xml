<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.primary.mapper.ManageUserMapper">

    <resultMap id="BaseResultMap" type="com.fish.dao.primary.model.ManageUser">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="role_ids" property="roleIds" jdbcType="VARCHAR"/>
        <result column="allowed_login" property="allowedLogin" jdbcType="BOOLEAN"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_name, password, nick_name, role_ids, allowed_login, update_time, last_login_time
    </sql>

    <select id="login" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from manage_user
        where user_name = #{userName, jdbcType=VARCHAR}
    </select>

    <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from manage_user
        where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from manage_user
    </select>

    <insert id="insert" parameterType="com.fish.dao.primary.model.ManageUser">
        insert into manage_user(user_name,
                                password,
                                nick_name,
                                role_ids,
                                allowed_login,
                                update_time)
        values (#{userName,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{nickName,jdbcType=VARCHAR},
                #{roleIds,jdbcType=VARCHAR},
                #{allowedLogin,jdbcType=BOOLEAN},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="update" parameterType="com.fish.dao.primary.model.ManageUser">
        update manage_user
        <set>
            <if test="userName != null">
                user_name = #{userName, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName, jdbcType=VARCHAR},
            </if>
            <if test="roleIds != null">
                role_ids = #{roleIds, jdbcType=VARCHAR},
            </if>
            allowed_login = #{allowedLogin,jdbcType=BOOLEAN},
            update_time = NOW()
        </set>
        where id = #{id, jdbcType=VARCHAR}
    </update>

    <update id="updateByUserSelf" parameterType="com.fish.dao.primary.model.ManageUser">
        update manage_user
        <set>
            <if test="userName != null">
                user_name = #{userName, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName, jdbcType=VARCHAR},
            </if>
            update_time = NOW()
        </set>
        where id = #{id, jdbcType=VARCHAR}
    </update>

    <update id="delete" parameterType="java.lang.String">
        delete
        from manage_user
        where id in (${deleteIds})
    </update>

    <update id="recodeLastLoginTime" parameterType="java.lang.String">
        update manage_user
        <set>
            last_login_time = NOW()
        </set>
        where user_name = #{userName, jdbcType=VARCHAR}
    </update>

</mapper>