<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.primary.mapper.ManageRoleMapper">

    <resultMap id="BaseResultMap" type="com.fish.dao.primary.model.ManageRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pages" property="pages" jdbcType="CLOB"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, name, pages, update_time
        from manage_roles
        where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectRolesByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, name, pages, update_time
        from manage_roles
        where id in (#{roleIds, jdbcType=VARCHAR})
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, name, pages, update_time
        from manage_roles
    </select>

    <insert id="insert" parameterType="com.fish.dao.primary.model.ManageRole">
        insert into manage_roles(name, pages, update_time)
        values (#{name,jdbcType=VARCHAR}, #{pages,jdbcType=VARCHAR}, NOW())
    </insert>

    <update id="update" parameterType="com.fish.dao.primary.model.ManageRole">
        update manage_roles
        <set>
            name = #{name,jdbcType=VARCHAR},
            pages = #{pages,jdbcType=VARCHAR},
            update_time = NOW()
        </set>
        where id = #{id, jdbcType=VARCHAR}
    </update>

    <update id="delete" parameterType="java.lang.String">
        delete
        from manage_roles
        where id in (${deleteIds})
    </update>

</mapper>