<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.second.mapper.AllCostMapper" >
  <resultMap id="BaseResultMap" type="com.fish.dao.second.model.AllCost" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ddUid" property="dduid" jdbcType="VARCHAR" />
    <result column="ddAppId" property="ddappid" jdbcType="VARCHAR" />
    <result column="ddType" property="ddtype" jdbcType="VARCHAR" />
    <result column="ddHistory" property="ddhistory" jdbcType="BIGINT" />
    <result column="ddCurrent" property="ddcurrent" jdbcType="BIGINT" />
    <result column="ddValue" property="ddvalue" jdbcType="INTEGER" />
    <result column="ddCostType" property="ddcosttype" jdbcType="VARCHAR" />
    <result column="ddCostExtra" property="ddcostextra" jdbcType="VARCHAR" />
    <result column="ddTime" property="ddtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, ddUid, ddAppId, ddType, ddHistory, ddCurrent, ddValue, ddCostType, ddCostExtra, 
    ddTime
  </sql>
  <select id="selectAllCost" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from all_cost
    where DATE(ddTime) between '${start}' and '${end}'

  </select>
  <!-- 自定义SQL语句 -->
  <select id="selectBySQL" resultType="com.fish.protocols.MatchCost" parameterType="java.lang.String" >
      ${_parameter}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from all_cost
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectCurrentCoin" resultType="com.fish.dao.second.model.AllCost" parameterType="java.lang.String" >
     ${_parameter}
  </select>
  <select id="selectCurrentCash" resultType="com.fish.dao.second.model.AllCost" parameterType="java.lang.String">
    ${_parameter}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from all_cost
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fish.dao.second.model.AllCost" >
    insert into all_cost (id, ddUid, ddAppId, 
      ddType, ddHistory, ddCurrent, 
      ddValue, ddCostType, ddCostExtra, 
      ddTime)
    values (#{id,jdbcType=BIGINT}, #{dduid,jdbcType=VARCHAR}, #{ddappid,jdbcType=VARCHAR}, 
      #{ddtype,jdbcType=VARCHAR}, #{ddhistory,jdbcType=BIGINT}, #{ddcurrent,jdbcType=BIGINT}, 
      #{ddvalue,jdbcType=INTEGER}, #{ddcosttype,jdbcType=VARCHAR}, #{ddcostextra,jdbcType=VARCHAR}, 
      #{ddtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fish.dao.second.model.AllCost" >
    insert into all_cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dduid != null" >
        ddUid,
      </if>
      <if test="ddappid != null" >
        ddAppId,
      </if>
      <if test="ddtype != null" >
        ddType,
      </if>
      <if test="ddhistory != null" >
        ddHistory,
      </if>
      <if test="ddcurrent != null" >
        ddCurrent,
      </if>
      <if test="ddvalue != null" >
        ddValue,
      </if>
      <if test="ddcosttype != null" >
        ddCostType,
      </if>
      <if test="ddcostextra != null" >
        ddCostExtra,
      </if>
      <if test="ddtime != null" >
        ddTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dduid != null" >
        #{dduid,jdbcType=VARCHAR},
      </if>
      <if test="ddappid != null" >
        #{ddappid,jdbcType=VARCHAR},
      </if>
      <if test="ddtype != null" >
        #{ddtype,jdbcType=VARCHAR},
      </if>
      <if test="ddhistory != null" >
        #{ddhistory,jdbcType=BIGINT},
      </if>
      <if test="ddcurrent != null" >
        #{ddcurrent,jdbcType=BIGINT},
      </if>
      <if test="ddvalue != null" >
        #{ddvalue,jdbcType=INTEGER},
      </if>
      <if test="ddcosttype != null" >
        #{ddcosttype,jdbcType=VARCHAR},
      </if>
      <if test="ddcostextra != null" >
        #{ddcostextra,jdbcType=VARCHAR},
      </if>
      <if test="ddtime != null" >
        #{ddtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.dao.second.model.AllCost" >
    update all_cost
    <set >
      <if test="dduid != null" >
        ddUid = #{dduid,jdbcType=VARCHAR},
      </if>
      <if test="ddappid != null" >
        ddAppId = #{ddappid,jdbcType=VARCHAR},
      </if>
      <if test="ddtype != null" >
        ddType = #{ddtype,jdbcType=VARCHAR},
      </if>
      <if test="ddhistory != null" >
        ddHistory = #{ddhistory,jdbcType=BIGINT},
      </if>
      <if test="ddcurrent != null" >
        ddCurrent = #{ddcurrent,jdbcType=BIGINT},
      </if>
      <if test="ddvalue != null" >
        ddValue = #{ddvalue,jdbcType=INTEGER},
      </if>
      <if test="ddcosttype != null" >
        ddCostType = #{ddcosttype,jdbcType=VARCHAR},
      </if>
      <if test="ddcostextra != null" >
        ddCostExtra = #{ddcostextra,jdbcType=VARCHAR},
      </if>
      <if test="ddtime != null" >
        ddTime = #{ddtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fish.dao.second.model.AllCost" >
    update all_cost
    set ddUid = #{dduid,jdbcType=VARCHAR},
      ddAppId = #{ddappid,jdbcType=VARCHAR},
      ddType = #{ddtype,jdbcType=VARCHAR},
      ddHistory = #{ddhistory,jdbcType=BIGINT},
      ddCurrent = #{ddcurrent,jdbcType=BIGINT},
      ddValue = #{ddvalue,jdbcType=INTEGER},
      ddCostType = #{ddcosttype,jdbcType=VARCHAR},
      ddCostExtra = #{ddcostextra,jdbcType=VARCHAR},
      ddTime = #{ddtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>