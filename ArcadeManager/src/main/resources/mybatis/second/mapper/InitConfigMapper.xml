<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fish.dao.second.mapper.InitConfigMapper">
  <resultMap id="BaseResultMap" type="com.fish.dao.second.model.InitConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ddVersion" jdbcType="VARCHAR" property="ddversion" />
    <result column="ddAppId" jdbcType="VARCHAR" property="ddappid" />
    <result column="ddJokeLogo" jdbcType="BIT" property="ddjokelogo" />
    <result column="ddGameUrl" jdbcType="VARCHAR" property="ddgameurl" />
    <result column="ddCode" jdbcType="INTEGER" property="ddcode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ddVersion, ddAppId, ddJokeLogo, ddGameUrl, ddCode, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from init_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from init_config
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from init_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fish.dao.second.model.InitConfig">
    insert into init_config (id, ddVersion, ddAppId, 
      ddJokeLogo, ddGameUrl, ddCode, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{ddversion,jdbcType=VARCHAR}, #{ddappid,jdbcType=VARCHAR}, 
      #{ddjokelogo,jdbcType=BIT}, #{ddgameurl,jdbcType=VARCHAR}, #{ddcode,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fish.dao.second.model.InitConfig">
    insert into init_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ddversion != null">
        ddVersion,
      </if>
      <if test="ddappid != null">
        ddAppId,
      </if>
      <if test="ddjokelogo != null">
        ddJokeLogo,
      </if>
      <if test="ddgameurl != null">
        ddGameUrl,
      </if>
      <if test="ddcode != null">
        ddCode,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ddversion != null">
        #{ddversion,jdbcType=VARCHAR},
      </if>
      <if test="ddappid != null">
        #{ddappid,jdbcType=VARCHAR},
      </if>
      <if test="ddjokelogo != null">
        #{ddjokelogo,jdbcType=BIT},
      </if>
      <if test="ddgameurl != null">
        #{ddgameurl,jdbcType=VARCHAR},
      </if>
      <if test="ddcode != null">
        #{ddcode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.dao.second.model.InitConfig">
    update init_config
    <set>
      <if test="ddversion != null">
        ddVersion = #{ddversion,jdbcType=VARCHAR},
      </if>
      <if test="ddappid != null">
        ddAppId = #{ddappid,jdbcType=VARCHAR},
      </if>
      <if test="ddjokelogo != null">
        ddJokeLogo = #{ddjokelogo,jdbcType=BIT},
      </if>
      <if test="ddgameurl != null">
        ddGameUrl = #{ddgameurl,jdbcType=VARCHAR},
      </if>
      <if test="ddcode != null">
        ddCode = #{ddcode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fish.dao.second.model.InitConfig">
    update init_config
    set ddVersion = #{ddversion,jdbcType=VARCHAR},
      ddAppId = #{ddappid,jdbcType=VARCHAR},
      ddJokeLogo = #{ddjokelogo,jdbcType=BIT},
      ddGameUrl = #{ddgameurl,jdbcType=VARCHAR},
      ddCode = #{ddcode,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>