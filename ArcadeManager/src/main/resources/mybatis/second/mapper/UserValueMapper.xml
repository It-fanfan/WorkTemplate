<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.second.mapper.UserValueMapper" >
  <resultMap id="BaseResultMap" type="com.fish.dao.second.model.UserValue" >
    <id column="ddUid" property="dduid" jdbcType="VARCHAR" />
    <result column="ddAwardMoney" property="ddawardmoney" jdbcType="INTEGER" />
    <result column="ddAwardCoin" property="ddawardcoin" jdbcType="INTEGER" />
    <result column="ddCoinCount" property="ddcoincount" jdbcType="INTEGER" />
    <result column="ddMoney" property="ddmoney" jdbcType="INTEGER" />
    <result column="ddTotalPayMoney" property="ddtotalpaymoney" jdbcType="INTEGER" />
    <result column="ddLoginTime" property="ddlogintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ddUid, ddAwardMoney, ddAwardCoin, ddCoinCount, ddMoney, ddTotalPayMoney, ddLoginTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_value
    where ddUid = #{dduid,jdbcType=VARCHAR}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from user_value
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_value
    where ddUid = #{dduid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fish.dao.second.model.UserValue" >
    insert into user_value (ddUid, ddAwardMoney, ddAwardCoin, 
      ddCoinCount, ddMoney, ddTotalPayMoney, 
      ddLoginTime)
    values (#{dduid,jdbcType=VARCHAR}, #{ddawardmoney,jdbcType=INTEGER}, #{ddawardcoin,jdbcType=INTEGER}, 
      #{ddcoincount,jdbcType=INTEGER}, #{ddmoney,jdbcType=INTEGER}, #{ddtotalpaymoney,jdbcType=INTEGER}, 
      #{ddlogintime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fish.dao.second.model.UserValue" >
    insert into user_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dduid != null" >
        ddUid,
      </if>
      <if test="ddawardmoney != null" >
        ddAwardMoney,
      </if>
      <if test="ddawardcoin != null" >
        ddAwardCoin,
      </if>
      <if test="ddcoincount != null" >
        ddCoinCount,
      </if>
      <if test="ddmoney != null" >
        ddMoney,
      </if>
      <if test="ddtotalpaymoney != null" >
        ddTotalPayMoney,
      </if>
      <if test="ddlogintime != null" >
        ddLoginTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dduid != null" >
        #{dduid,jdbcType=VARCHAR},
      </if>
      <if test="ddawardmoney != null" >
        #{ddawardmoney,jdbcType=INTEGER},
      </if>
      <if test="ddawardcoin != null" >
        #{ddawardcoin,jdbcType=INTEGER},
      </if>
      <if test="ddcoincount != null" >
        #{ddcoincount,jdbcType=INTEGER},
      </if>
      <if test="ddmoney != null" >
        #{ddmoney,jdbcType=INTEGER},
      </if>
      <if test="ddtotalpaymoney != null" >
        #{ddtotalpaymoney,jdbcType=INTEGER},
      </if>
      <if test="ddlogintime != null" >
        #{ddlogintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.dao.second.model.UserValue" >
    update user_value
    <set >
      <if test="ddawardmoney != null" >
        ddAwardMoney = #{ddawardmoney,jdbcType=INTEGER},
      </if>
      <if test="ddawardcoin != null" >
        ddAwardCoin = #{ddawardcoin,jdbcType=INTEGER},
      </if>
      <if test="ddcoincount != null" >
        ddCoinCount = #{ddcoincount,jdbcType=INTEGER},
      </if>
      <if test="ddmoney != null" >
        ddMoney = #{ddmoney,jdbcType=INTEGER},
      </if>
      <if test="ddtotalpaymoney != null" >
        ddTotalPayMoney = #{ddtotalpaymoney,jdbcType=INTEGER},
      </if>
      <if test="ddlogintime != null" >
        ddLoginTime = #{ddlogintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ddUid = #{dduid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fish.dao.second.model.UserValue" >
    update user_value
    set ddAwardMoney = #{ddawardmoney,jdbcType=INTEGER},
      ddAwardCoin = #{ddawardcoin,jdbcType=INTEGER},
      ddCoinCount = #{ddcoincount,jdbcType=INTEGER},
      ddMoney = #{ddmoney,jdbcType=INTEGER},
      ddTotalPayMoney = #{ddtotalpaymoney,jdbcType=INTEGER},
      ddLoginTime = #{ddlogintime,jdbcType=TIMESTAMP}
    where ddUid = #{dduid,jdbcType=VARCHAR}
  </update>
</mapper>